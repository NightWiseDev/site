package ru.nikolay.auth.service;

// ‚ú® –≠—Ç–æ—Ç –∫–ª–∞—Å—Å –±—ã–ª —Å–æ–∑–¥–∞–Ω –ù–∏–∫–æ–ª–∞—Å–æ–º
// üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 27.04.2025
// ‚è∞ –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 6:11
// üè¢ –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è: …¥…™…¢ ú·¥õ·¥°…™Íú±·¥á·¥Ö·¥á·¥†

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;
import ru.nikolay.auth.model.User;
import ru.nikolay.auth.repository.UserRepository;

@Service
public class AuthService {

    private final BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();


    @Autowired
    private UserRepository userRepository;

    public User findUserByLogin(String playerId) {
        return userRepository.findByPlayerId(playerId);
    }
    public boolean checkPassword(String rawPassword,String storedPasswordHash) {
        return passwordEncoder.matches(rawPassword,storedPasswordHash);
    }
    public boolean login(String playerId,String password) {
        User user = findUserByLogin(playerId);
        if(user == null)
        {
            return false; //–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        }
        if(!checkPassword(password,user.getPasswordHash()))
        {
            return false; //–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å
        }
        return true;
    }

}
