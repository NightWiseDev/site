package ru.nikolay.auth.config;

// ‚ú® –≠—Ç–æ—Ç –∫–ª–∞—Å—Å –±—ã–ª —Å–æ–∑–¥–∞–Ω –ù–∏–∫–æ–ª–∞—Å–æ–º
// üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 27.04.2025
// ‚è∞ –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 8:56
// üè¢ –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è: …¥…™…¢ ú·¥õ·¥°…™Íú±·¥á·¥Ö·¥á·¥†

import org.springframework.context.annotation.Bean;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;

public class SecurityConfig {
    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
                .authorizeHttpRequests(auth -> auth
                        .requestMatchers("/login").permitAll()  // –î–æ—Å—Ç—É–ø –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
                        .anyRequest().authenticated()  // –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ URL —Ç—Ä–µ–±—É—é—Ç –≤—Ö–æ–¥–∞
                )
                .formLogin(form -> form
                        .loginPage("/login")           // –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞
                        .defaultSuccessUrl("/home")   // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
                        .permitAll()
                )
                .logout(logout -> logout
                        .logoutSuccessUrl("/login?logout")  // –ü–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞
                        .permitAll()
                );

        return http.build();
    }
}
